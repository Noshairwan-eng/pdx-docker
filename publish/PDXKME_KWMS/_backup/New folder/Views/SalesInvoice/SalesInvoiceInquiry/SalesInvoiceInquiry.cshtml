@* hst001 : Noshairwan Farooq [09-04-2020] : Added Customer Code Multiselect. 
   hst001 : Noshairwan Farooq [09-04-2020] : Made Distributor Code multiselect disabled. 
   hst002 : rMehmood @Nov 24, 2020
            Made changes to download file(csv and xlsx) 

 *@

@Scripts.Render("~/bundles/InquiryJSBundle")
@Styles.Render("~/Content/InquiryCSSBundle")
<style type="text/css">   
    .ui-dialog .ui-dialog-buttonpane .ui-dialog-buttonset { text-align: center; float: none !important;}  
    .accordianRows{height: 80px !important;    min-height: 80px;}
    .legColumn label{color: #0066ff !important;font-size: 11px;font-weight: bold;} 
    .modal-sm { width: 369px;} 
    #ConfirmModalBody{ padding: 7px 3px 9px 4px !important;  }   
    .panel-body  { padding-top:4px !important;}    
    .pagination > li > a, .pagination > li > span {   font-size: 12px !important;  }  
    .gridActionButtons  {margin: -1px -6px 0 0 !important; } 
    .downlodMargin{margin-left:202px;}

    .clsActions>td{ text-align:left !important; } 
    .table tr td {padding:5px !important;   }  
    .Inlinebtn{width:80px !important;  } 
    .ui-datepicker{z-index: 99 !important;} 
    .btn-group, .btn-group-vertical {    position: relative;    display: inline-block;    vertical-align: middle;    width: 75% !important;}  
    .dropdown-menu>.active>a,.dropdown-menu>.active>a:focus,.dropdown-menu>.active>a:hover{background-color:white;color:#fff;outline:0none;text-decoration:none;} 
    .btn.caret{margin-left:0px;} 
    .highlight { background-color: red; }  

    #UserInquiryId tr:not(.highlight):hover { background-color:#F0F0F0  !important;} 
    .calendarPicker{background-position: right center; background-repeat: no-repeat;  background-image:url('../Images/calendar.png');  } 
    #UserInquiryId tr>td:hover(:empty) {cursor: pointer;} 
    #UserInquiryId  tr td:moz-only-whitespace{  cursor:pointer; } 
    .selected {  background-color:#fac902 !important;  }     
    .table{ margin:0 !important;} 
    .centerAlign{ text-align:center !important}
    .no-width{width:0px !important;}

    #btnDownload{ width:100px  !important}
    .ddlFile
    { 
        height: 30px ! important; 
        width: 90px;
        margin-top:5px;
    }

    @@media screen and (max-width: 767px) 
    {
        .marginAtXs{margin-top:10px;}
        .downlodMargin{margin-left:15px}
        button.multiselect 
        {
            background-color: White !important; border-radius: 1px; color: White; font-family: sans-serif,open sans;
            font-size: 13px !important; font-weight: 600 !important; height: 26px !important; padding: 4px 12px; text-decoration: none;  
            border-radius: 6px; width:97% !important;            
        }
        
     #btnDownload { width: 100%  !important;}
    .DropDownButtonContainer{width:100%;  margin-top:5px;}
    .bootstrap-filestyle{  margin: 0;    }
    .DropDownButtonContainer button { width:94% !important; }
    .btn-group, .btn-group-vertical{position: relative; display: inline-block; vertical-align: middle;width: 100% !important;}  
    .InputElements{ background-color: White !important; border: 1px solid grey !important; height: 25px !important; width: 97%;}  
    div#xyz{ margin-left:0px !important;  }  
    input,select { width:auto;  }    
    br { display:  none; }
    .TopMarginAtXs     {margin-top:5px; width:100% !important;}  
   
    } /* media 767 end*/
    #UserInquiryId thead tr th{ text-align:left }
    .table-striped thead tr th a { margin-left: -2px !important; }
    
    .btn.disabled.multiselect {opacity: 1.0 !important; border: 1px solid gray;} /*hst001*/
    .btn-group {cursor:no-drop;} /*hst001*/
    
 </style>
<div class="container childcontent ">
    <div class="panel panelInquiryControls panel-primary panelWidth">
        <div class="panel-heading PanelTitle">
            <h3 class="panel-title pull-left ">
                @Resources.Resource.SalesInvoiceInquiry</h3>
        </div>
        <div class="panel-body">
            <div class="row" style="margin: 2px 0px 10px -14px ! important;">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <button class=" btn  TopMarginAtXs" id="btnSearch">@Resources.Resource.btnSearch</button>
                    @*hst002 start*@
                      <button type="button" class="btn btn-secondary dropdown-toggle marginAtXs" id="btnDownload"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> @Resources.Resource.btnDownload<span class="caret"></span>
                    </button>
                    <div class="dropdown-menu DownLoadDropDown downlodMargin">
                        <a class="dropdown-item" href="#" onclick="DownloadFile('0')">CSV</a>
                        <a class="dropdown-item" href="#" onclick="DownloadFile('1')">XLS</a>
                    </div>
                    @*hst002 end*@
                </div>
            </div>
            <div class="FormElements">
                <div class="row" style="margin-bottom:1px;">
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div class="editor-label SizeOnXs">
                            @Html.Label(@Resources.Resource.lblDistributorCode)
                        </div>
                        <div class="editor-field SizeOnXs">
                            @Html.DropDownList("ddlDistributerCode", ViewData["DistributorCodes"] as List<SelectListItem>, new { @class = " form-control InputElements chosenddl", multiple = "multiple", id = "ddlDistributerCode" })
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div class="editor-label SizeOnXs">
                            @Html.Label(@Resources.Resource.lblCustomerCode)
                        </div>
                        <div class="editor-field SizeOnXs">
                            @Html.DropDownList("ddlCustomerCode", ViewData["CustomerCodes"] as List<SelectListItem>, new { @class = " form-control InputElements chosenddl", multiple = "multiple", id = "ddlCustomerCode" })
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div class="editor-field SizeOnXs">
                            @Html.Label(@Resources.Resource.lblInvoiceNo)
                        </div>
                        <div class="editor-label SizeOnXs">
                            @Html.TextBox("txtInvoiceNumber", null, new { @class = "form-control InputElements ", style = "display: inline; " })
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div class="editor-field SizeOnXs">
                            @Html.Label(@Resources.Resource.lblSaleOrderNo)
                        </div>
                        <div class="editor-label SizeOnXs">
                            @Html.TextBox("txtSalesOrderNumber", null, new { @class = "form-control InputElements ", style = "display: inline; " })
                        </div>
                    </div>
                </div>
                @*row end*@
                <div class="row">
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div class="editor-field SizeOnXs ">
                            @Html.Label(@Resources.Resource.lblPartNo)
                        </div>
                        <div class="editor-field SizeOnXs ">
                            @Html.TextBox("txtPartNumber", null, new { @class = "form-control InputElements" })
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div class="editor-label SizeOnXs">
                            @Html.Label(@Resources.Resource.lblOrderType)
                        </div>
                        <div class="editor-field SizeOnXs ">
                            @Html.DropDownList("OrderType", ViewData["OrderTypes"] as List<SelectListItem>, new { @id = "ddlOrderType", style = "display: -webkit-inline-flex;Display: inline-flex;display: inline", @class = "form-control InputElements" })
                            @*@Html.DropDownList("ddlOrderType", ViewData["StatusCodes"] as List<SelectListItem>, new { @class = "form-control InputElements" })*@
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div class="editor-label SizeOnXs">
                            @Html.Label(@Resources.Resource.lblInvoiceDateFrom)
                        </div>
                        <div class="editor-field SizeOnXs ">
                            @Html.TextBox("txtInvoiceDateF", null, new { @class = " calendarPicker form-control InputElements", @style = " background-color:White !important;" })
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div class="editor-label SizeOnXs">
                            @Html.Label(@Resources.Resource.lblInvoiceDateTo)
                        </div>
                        <div class="editor-field SizeOnXs ">
                            @Html.TextBox("txtInvoiceDateT", null, new { @class = " calendarPicker form-control InputElements", @style = " background-color:White !important;" })
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div class="editor-label SizeOnXs">
                            @Html.Label(@Resources.Resource.lblShippedDateFrom)
                        </div>
                        <div class="editor-field SizeOnXs ">
                            @Html.TextBox("txtShippedDateF", null, new { @class = " calendarPicker form-control InputElements", @style = " background-color:White !important;" })
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                        <div class="editor-label SizeOnXs">
                            @Html.Label(@Resources.Resource.lblShippedDateTo)
                        </div>
                        <div class="editor-field SizeOnXs ">
                            @Html.TextBox("txtShippedDateT", null, new { @class = " calendarPicker form-control InputElements", @style = " background-color:White !important;" })
                        </div>
                    </div>
                    @if (!Session["Role"].ToString().Equals(((int)PDXWEB.BusinessModels.Common.Enumerations.Roles.Dealer).ToString()) || PDXWEB.BusinessModels.Common.UserRights.hasRight("S04S010_01_001"))
                    { 
                        <div class="row">
                            <div class="col-lg-3 col-md-3 col-sm-4 col-xs-12">
                                @Html.CheckBox("chkDirectShipment", new { @id = "chkDirectShipment", @style = " margin-right:2px; margin-top: 15px" })
                                @Html.Label("Direct Shipment", new { @style = "margin-right:20px;" })
                            </div>
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>
</div>
<div class="container childcontent " style="padding-top: 0px ! important;">
    <div class="panel panelInquiryControls panel-primary panelWidth">
        <div id="LoadingImage" style="display: none; text-align: center">
        </div>
        <div id="divToUpdate" style="height: 350px;">
        </div>
    </div>
</div>
<div class="container childcontent " style="padding-top: 0px ! important;">
    <div class="panel panelInquiryControls panel-primary panelWidth">
    </div>
</div>
<div class="modals">
    <!-- Modal -->
    <div class="modal fade" id="MessageModal" role="dialog" style="padding-top: 169px;">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        &times;</button>
                    <h4 class="modal-title">
                        @Resources.Resource.SalesInvoiceInquiry</h4>
                </div>
                <div class="modal-body" id="modalBody">
                    <img class="imgError" />
                    <label id="lblMessageText" class="lblError">
                    </label>
                </div>
                <div class="modal-footer">
                    <button style="text-align: center; float: none !important;" id="btnOk" class="btn btn-default center-block"
                        data-dismiss="modal">
                        @Resources.Resource.btnOK</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modals">
    <!-- Modal -->
    <div class="modal fade" id="ConfirmModal" role="dialog" style="padding-top: 169px;">
        <div class="modal-dialog modal-sm" style="margin: 10px auto;">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        &times;</button>
                    <h4 class="modal-title">
                        @Resources.Resource.btnDelete.</h4>
                </div>
                <div class="modal-body" id="ConfirmModalBody">
                    <img  src="@Url.Content("~/images/question.png")" />
                    <label style="color: Red !important">
                        @Resources.Resource.MsgInfo60</label>
                </div>
                <div class="modal-footer">
                    <button id="btnOkDelete" class="btn btn-default pull-left" data-dismiss="modal">
                        @Resources.Resource.btnOK</button>
                    <button id="btnCancleDelete" class="btn btn-default pull-right" data-dismiss="modal">
                        @Resources.Resource.btnCancel</button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modals">
    <!-- Modal -->
    <div class="modal fade" id="ErrorModal" role="dialog" style="padding-top: 220px;">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        &times;</button>
                    <h4 class="modal-title">
                        @Resources.Resource.SalesInvoiceInquiry</h4>
                </div>
                <div class="modal-body" id="modalBody">
                    <img class="imgError" />
                    <label id="lblMessageText" class="lblError">
                    </label>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var fromHistory = false;
</script>



<script type="text/javascript">

    //hst001 Start
    var CurrentUserRole = @Session["Role"].ToString(); 
    if(CurrentUserRole=="3")
    {
          $("#ddlDistributerCode").attr("disabled", true);          
    }
    //hst001 End

    $("#ddlDistributerCode").multiselect(); //hst001
    $("#ddlCustomerCode").multiselect(
                {
            buttonText: function(options) {
                if(options.length==0)
                {
                    return "None selected";
                }
                else
                {
                    var selected = 0;
                    options.each(function () {
                    selected += 1;
                    });
                    return selected +  ' Selected ';
                }

        }}
    ); //hst001
    //hst001 Start
        $("#ddlDistributerCode").on("change", function(){
        SelectCustomerCodes();
    });
    //hst001 End

    //hst001 Start
    function SelectCustomerCodes()
    {
        $("#ddlCustomerCode option:selected").removeAttr("selected");
        $("#ddlCustomerCode").multiselect("refresh");
        
        var tempDistributors = $("#ddlDistributerCode").val();
        if(tempDistributors==null)
        {return;}
        var DbCodes = tempDistributors.join();
        var params = {Distributors: DbCodes};
            
        $.post("@Url.Action("GetDistributorCustomerCodes", "SalesInvoiceInquiry", null)",params,function(result){
        if(CheckForSessionExpiry(result))
        {
            SessionExpiredRedirect();
            return;
        }
    
        result.forEach(function(cust_code)
        {    
            $("#ddlCustomerCode").find("option[value='"+cust_code.CustomerCode+"']").prop("selected", "selected");
            $("#ddlCustomerCode").multiselect("refresh");

        });          
        });        
    }
    //hst001 End


    $(document).ajaxStart(function(){
         $("#divLoading").remove();
         $("#divToUpdate").parent("div").prepend("<div id='divLoading'></div>");
         $("div#divLoading").addClass('show');
    }).ajaxStop(function(){
          $("#divLoading").remove();
    });


    
    $(document).ready (function () { 
    $("#btnDownload").attr("disabled", "disabled");//hst002
        var txtErrorType;
        var txtError;
        $('.NewPaging ul').addClass("pagination");   
        var dateFormat="@Session["DateCulture"].ToString()";  
        if(dateFormat==null || dateFormat==""){dateFormat="mm/dd/yy"}
        InitializeCalander(dateFormat);//from refrencing JavaScript File
        $(".lagends").removeAttr("style");
        $(".accordion").accordion({ collapsible: true, active: false }); 
        function toValidDate(datestring)
        {
            return datestring.replace(/(\d{2})(\/)(\d{2})/, "$3$2$1");   
        }               
    });
    



    $("#btnSearch").on("click", function (event) {
        fromHistory = false;
        SearchRecords();

        });


    function SearchRecords()
    {
        
        flagDirectShipment = false;
        flagDirectShipment = $("#chkDirectShipment").is(":checked");

        //cond: only Date To is specified
        if($('#txtInvoiceDateT').val() != "" && $('#txtInvoiceDateF').val() == ""){
            txtError="@Resources.Resource.MsgInfo5";
            txtErrorType="0";
            DisplayModal(txtErrorType,txtError) ; 
            return false;
        }
        if($('#txtShippedDateT').val() != "" && $('#txtShippedDateF').val() == ""){
            txtError="@Resources.Resource.MsgInfo5";
            txtErrorType="0";
            DisplayModal(txtErrorType,txtError) ; 
            return false;
        }

        var InvoiceDateFrom = new Date($("#txtInvoiceDateF").datepicker("getDate"));
        var InvoiceDateTo   = new Date($("#txtInvoiceDateT").datepicker("getDate"));
        var ShippedDateFrom = new Date($("#txtShippedDateF").datepicker("getDate"));
        var ShippedDateTo   = new Date($("#txtShippedDateT").datepicker("getDate"));

        if($('#txtInvoiceDateT').val() != ""){
            if(InvoiceDateFrom > InvoiceDateTo){
            txtError="@Resources.Resource.MsgInfo6";
            txtErrorType="0";
            DisplayModal(txtErrorType,txtError) ;    
                return false;
            }
        }

        if($('#txtShippedDateT').val() != ""){                                 
            if(ShippedDateFrom > ShippedDateTo){
            txtError="@Resources.Resource.MsgInfo6";
            txtErrorType="0";
            DisplayModal(txtErrorType,txtError) ;    
                return false;
            }
        }

        $("#divLoading").remove();
        $("#divToUpdate").parent("div").prepend("<div id='divLoading'></div>");
        $("div#divLoading").addClass('show');


            //hst001 Start
            var listValD = new Array();
            $("#ddlDistributerCode option:selected").each(function()
            {
                var idOption = $(this).val();     
                listValD.push(idOption);      
            });   
            var lstDbCode = listValD.join();
            
            
            var listValC = new Array();
            $("#ddlCustomerCode option:selected").each(function(){
                var idOption = $(this).val();
                listValC.push(idOption);
            });
            var lstCustCode = listValC.join();
            //hst001 End


        var params = {  
                    InvoiceNumber: $("#txtInvoiceNumber").val(), 
                    SaleOrderNumber: $("#txtSalesOrderNumber").val(),
                    PartNumber:$("#txtPartNumber").val(), 
                    OrderType: $("#ddlOrderType").val(),
                    InvoiceDateFrom:$("#txtInvoiceDateF").val(), 
                    InvoiceDateTo: $("#txtInvoiceDateT").val(),
                    ShippedDateFrom:$("#txtShippedDateF").val(), 
                    ShippedDateTo:$("#txtShippedDateT").val(),
                    blnDirectShipment:$("#chkDirectShipment").is(":checked"),
                    getHistory: fromHistory,
                    DBCodes : lstDbCode, //hst001
                    CustCodes : lstCustCode //hst001
                    };                                     
          $("#btnDownload").attr("disabled", "disabled");//hst002
        $.ajax(
                {
                    cache: false,
                    type: "POST",
                    url: "@Url.Action("SearchResult", "SalesInvoiceInquiry", null)",
                    data: params,
                    success: function (data) {
                    
                    $("#divLoading").remove();

                        
                    if(CheckForSessionExpiry(data))
                    {                              
                        SessionExpiredRedirect();
                        return;
                    }                                                                                                        
                    $(".hideonLoad").show();                     
                    var data=data.replace("$(containerId).parent().delegate","$(containerId).parent().undelegate();$(containerId).parent().delegate ");                     
                    var data=data.replace("$(containerId).swhgLoad($(this).attr('href'), containerId, callback);"," if( !($(this).parent('li').hasClass('disabled')) ) { $(containerId).swhgLoad($(this).attr('href'), containerId, callback);}");
                    $("#divToUpdate").html(data);
                    $('.NewPaging ul').addClass("pagination");
                        
                    }
                    ,

                    error: function (xhr, ajaxOptions, thrownError) {
                    txtError = "@Resources.Resource.MsgInfo3";
                    txtErrorType = "0";
                    DisplayModal(txtErrorType, txtError);                           
                    }
                    });

    }
    

</script>

@if (Session["SalesInvoiceSearchParams"] != null && Session["RecordCount"] != null && Session["RecordCount"].ToString() != "0")
{
    var objParams = Session["SalesInvoiceSearchParams"] as PDXWEB.Models.SalesInvoice.SalesInvoieInquiry.SalesInvoiceSearchParams;
    <script type="text/javascript">
        fromHistory = true;
        var SearchedInvoiceNumber = "@objParams.InvoiceNumber";
        var SearchedSaleOrderNumber = "@objParams.SaleOrderNumber";
        var SearchedPartNumber = "@objParams.PartNumber";
        var SearchedOrderType = "@objParams.OrderType";
        var SearchedInvoiceDateF = "@objParams.InvoiceDateFrom";
        var SearchedInvoiceDateT = "@objParams.InvoiceDateTo";
        var SearchedShippedDateF = "@objParams.ShippedDateFrom";
        var SearchedShippedDateT = "@objParams.ShippedDateTo";
        var SearchedDirectShipment = "@objParams.blnDirectShipment";
        var SearchedDBCodes = "@objParams.DBCodes"; //hst001
        var SearchedCustCodes = "@objParams.CustCodes"; //hst001
        

        $("#txtInvoiceNumber").val(SearchedInvoiceNumber);
        $("#txtSalesOrderNumber").val(SearchedSaleOrderNumber);
        $("#txtPartNumber").val(SearchedPartNumber);
        $("#ddlOrderType").val(SearchedOrderType);
        $("#txtInvoiceDateF").val(SearchedInvoiceDateF);
        $("#txtInvoiceDateT").val(SearchedInvoiceDateT);
        $("#txtShippedDateF").val(SearchedShippedDateF);
        $("#txtShippedDateT").val(SearchedShippedDateT);
        $("#chkDirectShipment").prop("checked", (SearchedDirectShipment=="False")?false:true);
        //hst001 Start
        if(!isNullOrEmpty(SearchedDBCodes))
        {
            var DbValues=SearchedDBCodes.split(",");                  
            i = 0, size = DbValues.length;
            for(i; i < size; i++){
            $("#ddlDistributorCode").multiselect().find(":checkbox[value='"+DbValues[i]+"']").attr("checked","checked");
            $("#ddlDistributorCode option[value='" + DbValues[i] + "']").attr("selected", 1);
            $("#ddlDistributorCode").multiselect("refresh");
            } 
            fieldsCounter+=1;
        }
        if(!isNullOrEmpty(SearchedCustCodes))
        {
            var DbValues=SearchedCustCodes.split(",");                  
            i = 0, size = DbValues.length;
            for(i; i < size; i++){
            $("#ddlCustomerCode").multiselect().find(":checkbox[value='"+DbValues[i]+"']").attr("checked","checked");
            $("#ddlCustomerCode option[value='" + DbValues[i] + "']").attr("selected", 1);
            $("#ddlCustomerCode").multiselect("refresh");
            } 
            fieldsCounter+=1;
        }
        //hst001 End

        SearchRecords();

    </script>    
}

<script type="text/javascript">

    jQuery.fn.ForceNumericOnly =
    function()
    {
        return this.each(function()
        {
            $(this).keydown(function(e)
            {
                var key = e.charCode || e.keyCode || 0;
                // allow backspace, tab, delete, enter, arrows, numbers and keypad numbers ONLY
                // home, end, period, and numpad decimal
                return (
                    key == 8 || 
                    key == 9 ||
                    key == 13 ||
                    key == 46 ||
                    key == 110 ||
                    key == 190 ||
                    (key >= 35 && key <= 40) ||
                    (key >= 48 && key <= 57) ||
                    (key >= 96 && key <= 105));
            });
        });
    };

    $('#txtSalesOrderNumber').ForceNumericOnly();
    $('#txtInvoiceNumber').ForceNumericOnly();

    $('#txtPartNumber').keypress(function (event) {
        var key = event.which;
        if (this.value.length >= 20 && key != 8 && key != 13) {
            return false;
        }
    });

    $('#txtInvoiceNumber').keypress(function (event) {
    var key = event.which;
    if (this.value.length >= 20 && key != 8 && key != 13) {
        return false;
    }
    });

    $('#txtSalesOrderNumber').keypress(function (event) {
        var key = event.which;
        if (this.value.length >= 20 && key != 8 && key != 13) {
        return false;
        }
    });


    

    var flagDirectShipment = false;

    function afterLoad() {
        var counter=0;
        $(".gridHead th a").each(function () {
            $(this).addClass("a_" + $(this).attr("href").split("sort=")[1].split("&")[0]);
            $(this).parent("th").addClass("header_" + $(this).attr("href").split("sort=")[1].split("&")[0]);
            var respective_td = $("tbody").children("tr:first").find("td:eq("+counter+")");
            $(this).parent("th").addClass(respective_td.attr("class"));
            counter++;
        });
        setArrowImages();
        $('.NewPaging ul').addClass("pagination");

    }

    function showProgress() {
    
        if (!spinnerVisible) {
            $("#spinner").fadeIn("fast");
            spinnerVisible = true;
        }
    };

    function hideProgress() {
        if (spinnerVisible) {
            var spinner = $("#spinner");
            spinner.stop();
            spinner.fadeOut("fast");
            spinnerVisible = false;
        }
    };

    function setArrowImages() {
        var dir = $('#dir').val();
        var col = $('#col').val();
        var header = $('th a[href*=' + col + ']');

        if (dir == 'Ascending') {
            header.text(header.text() + ' ▲');
        }
        if (dir == 'Descending') {
            header.text(header.text() + ' ▼');
        }
    }  
    



        //Code To Add Button in a row ..Add new row after current row on current row click 
        //Register event on document
        $(document).on("click", "#UserInquiryId tr", function (event) 
        {                                                                   
        var $curRow = $(this).closest('tr');               
        $('.clsActions').remove(); // Remove the newly added row with class "clsActions" if already exist
        //Code to add row with css class  "clsActions" if user click on table header do not append row 
        if(!$(this).hasClass( "gridHead" ))
            {
            /* code to highlight selected row*/
            var selected = $(this).hasClass("highlight");
            $("#UserInquiryId tr").removeClass("highlight");
            if(!selected)
                $(this).addClass("highlight");
            /*code to highlight selected row end */

            $newRow = $('<tr class="clsActions"><td colspan="14" style=" padding-left:30px !important; text-align:left !important "><input type="Button" class="gridActionButtons Inlinebtn" value="Print" id="btnPrint"> &nbsp; <input type="Button" class="gridActionButtons" value="Download CSV"  id="btnDownloadCSV" style="margin-right:20px;">&nbsp; <input type="Button" class="gridActionButtons" value="Download XLS"  id="btnDownloadXLS" style="margin-right:20px;"> </tr>');                            
            $curRow.after($newRow);                         
            }
            var isCreatod= $curRow.find("#hfCreator").val();
//            if(CurrentUserRole!="" && CurrentUserRole!="1")
//            {
//                CheckRights(isCreatod);
//            }                                                    
        });  

        $(document).on("click",".clsActions input",function (event) 
        {         
            var strInvoiceNumber= $(this).closest('tr').prev('tr').find('td').eq(0).text();
            var strWarehouse = $(this).closest('tr').prev('tr').find('td').eq(10).find('input').val();


            
          
                 
            if ($(this).attr("id")=="btnPrint") 
            {  
                
            var strBODC = $("#chkDirectShipment").is(":checked")?"3":"0";
            var params = { InvoiceNumber: strInvoiceNumber, BODC: strBODC, Warehouse: strWarehouse };
               $.ajax(
                {
                    cache: false,
                    type: "POST",
                    url: "@Url.Action("PrintReport", "SalesInvoiceInquiry")",
                    data: params,
                    success: function (data) {
                        if (CheckForSessionExpiry(data)) {
                            SessionExpiredRedirect();
                            return;
                        }
                        if (data.ErrorOccured == 1) {
                          txtError = data.ErrorMessage;
                          txtErrorType = "0";
                          DisplayModal(txtErrorType, txtError);
                        }
                      else {
                            url= "@Url.Action("SalesInvoiceReportViewer", "SalesInvoiceInquiry")";  
                            window.open(url, '_blank', 'location=yes,height=570,width=900,scrollbars=yes,status=yes' )  ;
                            //window.location.href=url;
                        }

                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        txtError = "@Resources.Resource.MsgInfo3";
                        txtErrorType = "0";
                        DisplayModal(txtErrorType, txtError);
                    }
                }); // ajax end 

            }

            if ($(this).attr("id")=="btnDownloadCSV" || $(this).attr("id")=="btnDownloadXLS" ) 
            { 
                if($(this).attr("id")=="btnDownloadCSV")
                {var ExportParams = {InvoiceNumber: strInvoiceNumber , blnDirectShipment: flagDirectShipment, txtFileFormate: "0"};}
                else if($(this).attr("id")=="btnDownloadXLS")
                {var ExportParams = {InvoiceNumber: strInvoiceNumber , blnDirectShipment: flagDirectShipment, txtFileFormate: "1"};}
                
                 
        $.ajax(
                {
                    cache: false,
                    type: "POST",
                    url: "@Url.Action("ExportInvoice", "SalesInvoiceInquiry", null)",
                    data: ExportParams,
                    success: function (data) {
                
                    $("#divLoading").remove();

                     
                    if(CheckForSessionExpiry(data))
                    {                              
                        SessionExpiredRedirect();
                        return;
                    }                                                                                                        
                    
                    if(CheckForServerSideError(data))
                    {
                        $(".modal-header").removeClass("ModalDesign"); 
                        $(".hiddenForm").html(data);
                        DisplayModal(txtErrorType,txtError) ;              
                    }
                    else
                    {
                        $(".modal-header").removeClass("ModalDesign");
                        txtError=data.ErrorMessage;
                        txtErrorType="1";
                        DisplayModal(txtErrorType,txtError) ;  
                        window.location.href=data.RedirectToUrl;                   
                    }
                                          
                }
                ,

                    error: function (xhr, ajaxOptions, thrownError) {
                    txtError = "@Resources.Resource.MsgInfo3";
                    txtErrorType = "0";
                    DisplayModal(txtErrorType, txtError);                           
                    }
                }
            ); //ajax end


                        var params = { DateTo: $("#DateTo").val(), DateFrom: $("#DateFrom").val(), ChkLeadTime: $("#LeadTime").is(":checked"), OrderNo: $("#OrderNo").val()
            };



            }
            if ($(this).attr("id")=="btnDownloadXLS") 
            {  
                alert("Export XLS for Invoice: " + stInvoiceNumber);
            }
              
            event.stopPropagation();


        });  
</script>
@*hst002 start*@
<script type="text/javascript">
 function DownloadFile(fileFormat) 
{     
      var postData={txtFileFormate:fileFormat};
        /*Calling server method*/
     $.post("@Url.Action("DownloadFile", "SalesInvoiceInquiry", null)",postData,function (data) {    
              /*check for session expiry*/        
             if (CheckForSessionExpiry(data)) 
              {
                /*Calling redirection method if session has been expired*/
                    SessionExpiredRedirect();
                    return;
              }
             if(isRealValue(data.ErrorOccured))
             {
             /*show error message if data is undefined or null*/
               txtError = data.ErrorMessage;
               txtErrorType = "0";
               DisplayModal(txtErrorType, txtError);  
             }
             else
             {   
             /*Show success message and download file*/           
               txtError = data.ErrorMessage;
               txtErrorType = "1";
               DisplayModal(txtErrorType, txtError);            
               window.location.href=data.RedirectToUrl;
             }            

      }); /// ajax end 
}//function end
/*function to check server response for null/ undefined*/
 function isRealValue(obj) {
        return obj && obj !== "null" && obj !== "undefined";
    }
</script>
@*hst002 end*@
