 @model PDXWEB.Models.Consignment.CsConditions.CSConditionsViewModel
 

<style type="text/css">
  
		 input[type=text]:focus { outline:none; } 

</style>
@Scripts.Render("~/bundles/InquiryJSBundle")
@Styles.Render("~/Content/InquiryCSSBundle")
@{
    ViewBag.Title = Resources.Resource.ConsignmentOrderCondition;
    string strCheckRole = "";
    string strCheckDetails = "0";
    if (Session["role"] != null)
    {
        if (Session["role"].ToString() == "1")
        {
            strCheckRole = Session["role"].ToString();
        }else
     
        {
            strCheckRole = "0";
        }

    }                 
    
}
<style type="text/css">    
            

  .txtDatePicker {background-position: right center; background-repeat: no-repeat; background-image:url('../Images/calendar.png');   }         
   .txtBillingRates {  width:63px !important; }
   .Dname  {   width:88%; }
   @@media Screen and (max-width: 1200px)
        {
         .BratAtMd { width: 90% !important;  }
         .CommentstsAtMd { width: 90% !important;  }
         .MemoAtMd {  width: 90% !important; }
         .SaddAtMd { }
                
        }
           
       div#SCM> element { border: 1px solid !important;  }       
       textarea { border: 1px solid !important;  }               
       div.BratAtMd element{  border: 1px solid !important; }
      .form-control{ white-space: nowrap;
                     padding: 3px 0px 3px 2px !important;
                     font-size: 11px !important;
                     border: 1px solid gray !important;
                   }
                
      div.BratAtMd> element {  height: auto; border: 1px solid; }           
      .panel-body{  padding-top:4px !important;   }
 @@media screen and (max-width: 767px) 
  {
       .CommentstsAtMd  {  width: 97% !important;   }
       .MemoAtMd {  width: 97% !important;  }
       .SaddAtMd { width: 97% !important;  }          
        .InputElements 
          {
            background-color: White !important; border: 1px solid grey !important; height: 25px !important; width: 97%;
          }    
          #lblFixPrice{ margin-top:5px !important}
          Span#spnPercent{Display:none}  
           .TopMarginAtXs
     {
      margin-top:5px; 
      width:100% !important;  
     }        
       
} /* media 767 end*/

      
      
</style>
<div class="container  childcontent">
<div class="panel panelInquiryControls panel-primary">
<div class="panel-heading PanelTitle clearfix" style=" background-color: #FAC902 !important;">
<h3 class="panel-title pull-left "  style=" font-weight:bold; margin-right:20px !important">@Resources.Resource.ConsignmentOrderCondition</h3>
</div>
<div class="panel-body">
  <div class="row" style="margin: -12px 0px 5px -14px ! important; margin-top:2px !important; margin-bottom:10px !important"> 
         <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
         <button class=" btn TopMarginAtXs" id="btnSearch" >@Resources.Resource.btnSearch</button> 
         <button class=" btn TopMarginAtXs" id="btnNew"   >@Resources.Resource.btnNew</button> 
         <button class=" btn TopMarginAtXs" id="btnSave"   >@Resources.Resource.btnSave</button> 
         <button class=" btn btnNewLine TopMarginAtXs"  id="btnDetail" >@Resources.Resource.btnDetail</button> 
           
         </div>
  </div>
    <div  class="FormElements">  
    <div class="row">   
      <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
       <div class="editor-label SizeOnXs clsEdtLabel">
          @Html.Label(@Resources.Resource.lblOrderNo)
        </div>
        <div class="editor-label SizeOnXs">                          
          @Html.TextBoxFor(model => model.OrderNo, null, new { @id = "txtOrderNo", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })         
          <span id="spnQuotationNo"></span> 
        </div>
    </div> 
      <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
          <div class="editor-label SizeOnXs clsEdtLabel">
               @Html.Label(@Resources.Resource.lblOtherCharges, new {@id="lblCharges" })
          </div>
          <div class="editor-field SizeOnXs ">
           @Html.TextBoxFor(model => model.OtherCharges, new { @id = "txtOtherCharges", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline !important", @class = "form-control InputElements" }) 
         <span id="spnPercent">%</span>        
          </div>

      </div> 
      <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">        
          <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblRequestedDeliveryTime)
           </div>
           <div class="editor-field SizeOnXs">
            @Html.TextBoxFor(model => model.RequestedDeliveryTime, new { id = "RequestedDeliveryTime", @style = " background-color:White !important; ", @class = " calendarPicker form-control InputElements txtDatePicker" })            
           <span id="spnRequestedDeliveryTime"></span>
           </div>
   </div>
      <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
     <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblOrderRecieveDate)
           </div>
           <div class="editor-field SizeOnXs">
            @Html.TextBoxFor(model => model.OrderRecieveDate, new { @id = "OrderRecieveDate", @style = " background-color:White !important;", @class = "calendarPicker form-control InputElements txtDatePicker" }) 
           <span id="spnOrderRecieveDate"></span>
           </div>
   </div>



      

     

    </div> @*rowend*@

   <div class="row">
           <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
         <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblDistributorCode)
          </div>
           <div class="editor-field SizeOnXs">
      @Html.DropDownList("DistributerCodes", Model.DistributerCodes as List<SelectListItem>, new { @id = "DistributerCode", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" }) 
           <span id="spnDistributerCodes"></span>
           </div>
    </div>
           <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
              <div class="editor-label SizeOnXs">
                  @Html.Label(@Resources.Resource.lblDistributorName)
              </div>
              <div class="editor-field SizeOnXs">
               @Html.TextBoxFor(model => model.DistributerName, new { @id = "DistributerName", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements Dname" }) 
              
              </div>
       </div>
           <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
         <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblPersonIncharge)
           </div>
           <div class="editor-field SizeOnXs">
            @Html.TextBoxFor(model => model.PersonIncharge, new { @id = "PersonIncharge", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })
           </div>
   </div>



       
       
       
       
       
 </div> @*rowend*@   


  <div class="row">
     <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
      <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblConsignmentWareHouse)
           </div>
        <div class="editor-field SizeOnXs">
        @Html.TextBoxFor(model => model.CSWareHouse, new { @id = "txtCSWareHouse", style = "Display: inline-flex;display: -webkit-inline-flex;Display: inline", @class = "form-control InputElements" })  
       <span id="spntxtCSWareHouse"></span>
       </div> 
   </div>
     <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
           <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblCountryCode)
           </div>
        <div class="editor-field SizeOnXs">
         @Html.TextBoxFor(model => model.CountryCode, new { @id = "txtCountryCode", style = "Display: inline-flex;display: -webkit-inline-flex;Display: inline", @class = "form-control InputElements" })   
      <span></span>
       </div> 
   </div>
     <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">        
          <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblAreaCode)
           </div>
           <div class="editor-field SizeOnXs">
            @Html.TextBoxFor(model => model.AreaCode, new { @id = "txtAreaCode", style = "Display: inline-flex;display: -webkit-inline-flex;Display: inline", @class = "form-control InputElements" })             
           <span id="spnAreaCode"></span>
           </div>
   </div>
      <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
    <div class="editor-label SizeOnXs">
         @Html.Label(@Resources.Resource.lblRegion)
     </div>
          <div class="editor-field SizeOnXs">
         @Html.DropDownList("Region", Model.Region1 as List<SelectListItem>, new { @id = "Region", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" }) 
           <span id="spnRegion"></span>
          </div>
   </div>


              
       
      



  </div> @*rowend*@ 
  <div class="row">
       <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
           <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblOrderType)
           </div>
           <div class="editor-field SizeOnXs">
            @Html.DropDownList("OrderType", Model.OrderType as List<SelectListItem>, new { @id = "OrderType", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })            
           <span id="spnOrderType"></span>
           </div>
       </div>
       <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 ">
              <div class="editor-label SizeOnXs">
                  @Html.Label(@Resources.Resource.lblPriceCode)
              </div>
              <div class="editor-field SizeOnXs">
               @Html.DropDownList("SalesPriceList", Model.SalesPriceList1 as List<SelectListItem>, new { @id = "SalesPriceList", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })   
                <span id="spnSalesPriceList"></span>        
              </div>
       </div>
       <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
        <div class="editor-label SizeOnXs">
             @Html.Label(@Resources.Resource.lblTransportation)
         </div>
         <div class="editor-field SizeOnXs">
          @Html.DropDownList("Transportation", Model.Transportation as List<SelectListItem>, new { @id = "Transportation", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })          
         <span id="spnTransportation"></span>
         </div>
      </div>
       <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
           <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblBackOrderDirectShipmentCode)
           </div>
         <div class="editor-field SizeOnXs">
          @Html.DropDownList("ddlBODS", Model.BODS as List<SelectListItem>, new { @id = "ddlBODS", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })   
       <span></span>
       </div> 
      </div>




      
      
      
    
   </div> @*rowend*@  
   <div class="row">
       <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
              <div class="editor-label SizeOnXs">
                @Html.Label(@Resources.Resource.lblCurrency)
              </div>
               <div class="editor-field SizeOnXs">
                  @Html.DropDownList("Currency", Model.Currency as List<SelectListItem>, new { @id = "Currency", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })  
                  <span id="spnCurrency"></span>          
               </div>
       </div>
       <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
           <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblExchangeRate)
           </div>
           <div class="editor-field SizeOnXs">
            @Html.TextBoxFor(model => model.ExchangeRate, new { @id = "ExchangeRate", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })           
           </div>
       </div>
       <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
           <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblTaxRate)
           </div>
           <div class="editor-field SizeOnXs">
            @Html.DropDownList("TaxRate", Model.TaxRate as List<SelectListItem>, new { @id = "TaxRate", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })          
           <span id="spnTaxRate"></span>
           </div>
     </div>   
       <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
    <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblStatus)
           </div>
           <div class="editor-field SizeOnXs">
         @Html.DropDownList("Status", Model.Status as List<SelectListItem>, new { @id = "Status", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" }) 
           <span id="spnStatus"></span>
           </div>
   </div>



  
   </div>@*rowend*@ 
   <div class="row">
 
     
   <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
           <div class="editor-label SizeOnXs">
            @Html.Label(@Resources.Resource.lblUsance)
          </div>
          <div class="editor-field SizeOnXs">
           @Html.DropDownList("Usance", Model.Usance as List<SelectListItem>, new { @id = "Usance", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })            
           <span id="spnUsance"></span>
           </div>
      </div>
   <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
       <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblPaymentTerm)
           </div>
           <div class="editor-field SizeOnXs">
        @Html.DropDownList("PaymentTerms", Model.PaymentTerms as List<SelectListItem>, new { @id = "PaymentTerms", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" }) 
           <span id="spnPaymentTerms"></span>
           </div>
      </div>
   <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
       <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblDeliveryTerm)
           </div>
           <div class="editor-field SizeOnXs">
        @Html.DropDownList("DeliveryTerms", Model.DeliveryTerms as List<SelectListItem>, new { @id = "DeliveryTerms", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })                  
          <span id="spnDeliveryTerms"></span>
           </div>
      </div>
        @if (PDXWEB.BusinessModels.Common.UserRights.hasRight("X01S020_05_002"))
         {
            
        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
        <label id="lblFixPrice" style="margin: 19px 0px 0px 15px;">
        <input id="FixPrice" class="form-control InputElements" type="checkbox" value="true" style="width:inherit; margin: 0 5px -25px -16px !important;" name="cbxKME" data-val-required="The cbxKME field is required." data-val="true"  />
<input type="hidden" value="false" name="FixPrice" />Fix Price</label>


                
      </div>
            
             
         
         }
    
  
        
    


   @*end style = "Display: inline-flex", if*@
    
 </div>@*rowend*@    
 
        
 <div class="row">
 
   <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
    <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblLoadingPort)
      </div>
      <div class="editor-field SizeOnXs">
        @Html.DropDownList("LoadingPort", Model.LoadingPort as List<SelectListItem>, new { @id = "LoadingPort", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })            
        <span id="spnLoadingPort"></span>
        </div>
   </div>
   <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
   <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblUnloadingPort)
           </div>
        <div class="editor-field SizeOnXs">
        @Html.DropDownList("UnloadingPort", Model.UnloadingPort1 as List<SelectListItem>, new { @id = "UnloadingPort", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })      
       <span id="spnUnloadingPort"></span>
        </div>
   </div>
 
    @if ( (PDXWEB.BusinessModels.Common.UserRights.hasRight("X01S020_05_004")))
     {
        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
      <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblSubstitutionCode)
           </div>
        <div class="editor-field SizeOnXs">
         @Html.DropDownList("SubstitutionCodes"  ,Model.SubstitutionCodes1 as List<SelectListItem>, new { @id = "SubstitutionCodes", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })   
       <span></span>
       </div> 
   </div>  
          
   
  
    
  
        
     }
 
  @if ( (PDXWEB.BusinessModels.Common.UserRights.hasRight("X01S020_05_003")))
  { 
  
  <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
    <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblPriceSettingCode)  
           </div>
        <div class="editor-field SizeOnXs">
       @Html.DropDownList("PriceSettingCodes", Model.PriceSettingCodes as List<SelectListItem>, new { @id = "PriceSettingCodes", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })   
       <span></span>
       </div> 
   </div>
  
  }



 </div>
  
 <div class="row">
 
    @if (  (PDXWEB.BusinessModels.Common.UserRights.hasRight("X01S020_05_005")))
    {
        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
           <div class="editor-label SizeOnXs">
               @Html.Label(@Resources.Resource.lblManufacturer)
           </div>
        <div class="editor-field SizeOnXs">
         @Html.DropDownList("Manufacturer", Model.Manufacturer as List<SelectListItem>, new { @id = "Manufacturer", style = "display: -webkit-inline-flex;Display: inline-flex;Display: inline", @class = "form-control InputElements" })   
      <span></span>
       </div> 
   </div>
   
  
    
  
        
    }
 
 </div>

  <div class="row" style="margin-top:2px;">
 
        <div class="col-lg-3 col-md-6 col-sm-6 col-xs-12 hidden-xs">
           <div style="display:inline-block !important; " class="BratAtMd">
            @Html.Label(@Resources.Resource.lblBillingRates)
                @*<div style=" border:1px solid gray; padding:10px;">*@

                <fieldset class="form-control " style=" height:auto;">
                    <div style="display: inline-block; padding-top:15px; padding-right:7px; padding-left:16px; padding-bottom:20px !important;">
                        @Html.Label(@Resources.Resource.lblCGA)
                        @Html.TextBoxFor(model => model.BillingRateA, new { @id = "BillingRateA", @class = "form-control InputElements txtBillingRates allownumericwithdecimal" })
                        <span id="spnBillingRateA"></span>
                        @Html.Label(@Resources.Resource.lblCGB, new { @style = " margin-top:5px;" })
                        @Html.TextBoxFor(model => model.BillingRateB, new { @id = "BillingRateB", @class = "form-control InputElements txtBillingRates allownumericwithdecimal" })
                       <span id="spnBillingRateB"></span>
                       
                    </div>
                   <div  style="display: inline-block; padding-top:15px; padding-right:7px;">
                     @Html.Label(@Resources.Resource.lblCGC)
                        @Html.TextBoxFor(model => model.BillingRateC, new { @id = "BillingRateC", @class = "form-control InputElements txtBillingRates allownumericwithdecimal" })
                       <span id="spnBillingRateC"></span>
                        @Html.Label(@Resources.Resource.lblCGD, new { @style = " margin-top:5px;" })
                        @Html.TextBoxFor(model => model.BillingRateD, new { @id = "BillingRateD", @class = "form-control InputElements txtBillingRates allownumericwithdecimal" })
                       <span id="spnBillingRateD"></span>

                    </div>
                    <div style="display: inline-block; margin-top: 10px; padding-right:20px;">
                       
                        @Html.Label(@Resources.Resource.lblCGE)
                        @Html.TextBoxFor(model => model.BillingRateE, new { @id = "BillingRateE", @class = "form-control InputElements txtBillingRates allownumericwithdecimal" })
                        <span id="spnBillingRateE"></span>
                        @Html.Label(@Resources.Resource.lblCGF, new { @style = " margin-top:5px;" })
                        @Html.TextBoxFor(model => model.BillingRateC, new { @id = "BillingRateF", @class = "form-control InputElements txtBillingRates allownumericwithdecimal" })
                       <span id="spnBillingRateF"></span>
                    </div>
                    </fieldset>
                @*</div>     *@                                                          
            </div>                

       </div>
       
        <div class="col-lg-3 col-md-6 col-sm-6 col-xs-12"  >
        <div>
        @Html.Label(@Resources.Resource.lblShippingAddress) 
        </div>
        <div>
         @Html.TextAreaFor(model => model.ShipToAddress, new { @id = "ShipToAddress", style = " width:90%; height:128px;  white-space: normal !important;display: -webkit-inline-flex; Display: inline-flex;Display: inline; resize: none", @class = "form-control SaddAtMd" }) 
        <span id="spnShipToAddress"></span>
        </div>
      </div>
  <div class="clearfix visible-md-block visible-sm-block"></div>

 <div id="SCM" class="col-lg-3 col-md-6 col-sm-6 col-xs-12">
    <div>
    @Html.Label(@Resources.Resource.lblComments)
     </div>
     @Html.TextAreaFor(model => model.Comments, new { @id = "Comments", maxlength = "150", style = " width:100%; height:128px; white-space: normal !important; resize: none", @class = "form-control CommentstsAtMd" }) 
 </div>

 <div  class="col-lg-3 col-md-6 col-sm-6 col-xs-12">
 <div>
   @Html.Label(@Resources.Resource.lblMemo)
 </div>
 @Html.TextAreaFor(model => model.Memo, new { @id = "Memo", maxlength = "50", style = " width:78%; height:128px;white-space: normal !important; resize: none", @class = "form-control MemoAtMd" }) 
 </div>

     
   
 </div>@*rowend*@ 

 


  

 




</div>@*// FormElements div*@
<div style=" margin:30px;"></div>
<div style=" clear:both"></div>
</div>@*panel body*@
</div>  @*panel div*@
 
</div> @*conatiner div end*@

 
 
<div class="modals">
    <!-- Modal -->
    <div class="modal fade" id="MessageModal" role="dialog" style="padding-top: 169px;">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        &times;</button>
                    <h4 class="modal-title">
                 @Resources.Resource.ConsignmentOrderCondition</h4>
                </div>
                <div class="modal-body" id="modalBody">
                <img  class="imgError"/>
                <label id="lblMessageText"  class="lblError"></label>
                </div>
                <div class="modal-footer">
                 <button style=" text-align:center;float: none !important;" id="btnOk" class="btn btn-default center-block" data-dismiss="modal">
                        @Resources.Resource.btnOK
                  </button>
                </div>
            </div>
        </div>
    </div>
</div>


<div id="divToUpdate"></div>

 
 

 <script type="text/javascript">
     $("#txtAreaCode").on("paste", function (event) { var element = this; setTimeout(function () { var text = $(element).val(); if (text.length >= 5) { $(element).val(text.substr(0, 5)); } }, 100); });
     $('#txtAreaCode').keypress(function (event) { var key = event.which; if (this.value.length >= 5 && key != 8 && key != 13) { return false; } });

    function ValidateForm() {
    }
</script>

@*btn Search click function*@
 <script type="text/javascript">
    var checkForDetails=@strCheckDetails;
    var CheckForStatus=0;
        var txtErrorType;
        var txtError;

    $(document).ready(function () {   
       //hstU001 start     
 
        var dateFormat="@Session["DateCulture"].ToString()";  
        if(dateFormat==null || dateFormat==""){dateFormat="mm/dd/yy"}
          InitializeCalander(dateFormat,"","");//from refrencing JavaScript File
        //hstU001 end 
      if (!(checkForDetails>0))
      {
      $("#btnDetail").attr("disabled","disabled");
      }
      else{
        $("#btnDetail").attr("disabled",false);
      }
     $('#Status').on("change", function (e) {    
       if (checkForDetails>0) {
          $("#Status").val("2");
          if($(this).val()==4)
           {
          // alert("Please Perform Copy To SO Operation from Quotation Inquiry Screen ");
          


               //txtError=" Please Perform the Operation  from Consignment Inquiry Screen";
               txtError="@Resources.Resource.MsgInfo61";
               txtErrorType="0";
               DisplayModal(txtErrorType,txtError) ; 
           
            }
         }
    else
        {
        if (!(checkForDetails>0) && $(this).val()==3 && CheckForStatus==1)
        {
         $("#Status").val("3");
        }
        else
        {
          if($(this).val()==1)
           {
           $("#Status").val("1");
            }
          else{
             $("#Status").val("1");   
              
               //txtError="status cannot be changed as detail dose not exist";
               txtError="@Resources.Resource.MsgInfo62";
               txtErrorType="0";
               DisplayModal(txtErrorType,txtError) ;         
                  
            }
           
            }
        }
     
        
        });
});
function isRealValue(obj){
 return obj && obj !== "null" && obj!== "undefined";
        }

$("#btnSearch").click(function () {
  if( !PostGetPreCheck()){return;}//This Check makes sure that there is not any exsiting Ajax Request ,in other case the call is returned void and doesnt proceeds to next code
 var count=0;
   $("select option:selected").each(function () { 
           if($(this).val()=="")
                   {                 
                  /*  $(this).parent().next("span").html("*").attr("style","color:red");*/
                   $(this).parent().attr("style","");
                   }
                   else 
                   {
                   /* style="display: -webkit-inline-flex;display: inline-flex;display: inline"*/
                    $(this).parent().attr("style","");
                    /*$(this).parent().next("span").text("");*/
                    }
         });
        $("#txtCSWareHouse").attr("style","");
        $("#spnQuotationNo").html("")
        if ($('#txtOrderNo').val().trim()=="") {
        $("#txtOrderNo").attr("style","border-color:#ff8080 !important;box-shadow: 0px 0px 5px 0px #ff8080;display: inline");
                   /* $("#spnQuotationNo").html("*").attr("style","color:red");*/
                    return false;
                  }
          
    $("#txtOrderNo").attr("style","");
     var OTYPCheck;
     $("#divLoading").remove();
     $("#divToUpdate").prepend("<div id='divLoading'></div>");
     var formData = { OrderNo: $('#txtOrderNo').val(), DBCode:$("#DistributerCode").val() };
         $.ajax({
             cache: false,
             type: "POST",
             data: formData,
             url:"@Url.Action("Search", "CSCondition", null, Request.Url.Scheme)",            
             success: function (data2) 
             { 
             if (CheckForSessionExpiry(data2)) 
             {
                SessionExpiredRedirect();
                  return;
              }

                 if (data2.DataCheck=="1") {
                      if(data2.intExceptionOccured==1)
                       {
                           txtError=data2.ExceptionOccured;
                           txtErrorType="0";
                           DisplayModal(txtErrorType,txtError) ;         
                           
                       
                       }
                      else{
                       //txtError=" No Record Found";
                           txtError=" @Resources.Resource.MsgInfo18";
                           txtErrorType="0";
                           DisplayModal(txtErrorType,txtError) ;    
                        
                       }
                
                   }
              else { 
                         
                         CheckForStatus=1;  
                         // $("#OrderType").attr("disabled",true)  
                          $("#btnDetail").attr("disabled",false);  
                           if (data2.isDetailsExist>0) 
                           {
                               checkForDetails=data2.isDetailsExist;
                               $("#OrderType").attr("disabled","disabled");                                    
                               $('#FixPrice').attr("disabled","disabled");
                           }
                           else 
                           {
                             checkForDetails=0
                           }
                  
                         $('#txtOrderNo').val(data2.OrderNo);
                         $("#txtOrderNo").attr("disabled","disabled");
                         $('#txtOtherCharges').val(data2.OtherCharges);
                         $("#btnDetail").attr("disabled",false);
                          $.each(data2.BODS, function (index, itemData) { 
                         if (itemData.Value!=null&&itemData.Value!="")
                            $('#ddlBODS').val(itemData.Value)
                             }); 
                          $.each(data2.DistributerCodes, function (index, itemData) { 
                              $('#DistributerCode').val( itemData.Value);
                              });   
                          $.each(data2.SalesPriceList1, function (index, itemData) { 
                         if (itemData.Value!=null&&itemData.Value!="")
                            $('#SalesPriceList').val(itemData.Value)
                             });  
                       
                           $.each(data2.Currency, function (index, itemData2) { 
                                 $('#Currency').val(itemData2.Value)
                                 });
                            $('#DistributerName').val(data2.DistributerName);  
                              $('#ExchangeRate').val(data2.ExchangeRate);
                              
                          $.each(data2.OrderType, function (index, itemData2) {             
                                            OTYPCheck=itemData2.Value;
                          $('#OrderType').val(itemData2.Value)
                            }); 
                     
                            $.each(data2.Usance, function (index, itemData2) { 
                                     $('#Usance').val(itemData2.Value)
                                    
                                      });
                            $.each(data2.TaxRate, function (index, itemData2) { 
                                     $('#TaxRate').val(itemData2.Value)
                                    
                          });

                 $.each(data2.Transportation, function (index, itemData2) { 
                         $('#Transportation').val(itemData2.Value)
                        
                          });
                     $.each(data2.DeliveryTerms, function (index, itemData2) { 
                         $('#DeliveryTerms').val(itemData2.Value)
                        
                          });
                   $.each(data2.PaymentTerms, function (index, itemData2) { 
                         $('#PaymentTerms').val(itemData2.Value)                        
                          });
                $('#PersonIncharge').val(data2.PersonIncharge);
                $('#txtCSWareHouse').val(data2.CSWareHouse);
                $('#txtCountryCode').val(data2.CountryCode);
                $('#txtAreaCode').val(data2.AreaCode);
                if(typeof data2.SubstitutionCodes !="undefined")
                {
                $.each(data2.SubstitutionCodes, function (index, itemData2) { 
                $('#SubstitutionCodes').val(itemData2.Value)
                        
                          });
                 }
                 $.each(data2.PriceSettingCodes, function (index, itemData2) { 
                     $('#PriceSettingCodes').val(itemData2.Value)                        
                          });
                 $('#RequestedDeliveryTime').val(data2.RequestedDeliveryTime);
                 $('#OrderRecieveDate').val(data2.OrderRecieveDate);                
                 $('#BillingRateA').val(data2.BillingRateA);
                 $('#BillingRateB').val(data2.BillingRateB);
                 $('#BillingRateC').val(data2.BillingRateC);
                 $('#BillingRateD').val(data2.BillingRateD);;
                 $('#BillingRateE').val(data2.BillingRateE);
                 $('#BillingRateF').val(data2.BillingRateF);
                 $('#ShipToAddress').val(data2.ShipToAddress);
                 $('#Memo').val(data2.Memo);
                 $('#Comments').val(data2.Comments);
                 $.each(data2.LoadingPort, function (index, itemData2) { 
                         $('#LoadingPort').val(itemData2.Value)
                        
                          });
                    $.each(data2.UnloadingPort1, function (index, itemData2) { 
                         $('#UnloadingPort').val(itemData2.Value)
                        
                          });
                          
                $.each(data2.Region1, function (index, itemData2) { 
                         $('#Region').val(itemData2.Value)
                        
                          });
             
                 if (data2.FixPrice==true) 
                    {
                     $('#FixPrice').attr("checked","checked");
                    }
               else {
                    $('#FixPrice').removeAttr("checked");
                    }

               $.each(data2.Status, function (index, itemData2) { 
                    
                      if (itemData2.Value>1) 
                        {
                         
                          if (itemData2.Value==2) 
                             {
                              //$('#txtOrderNo').attr("disabled",false);
                             }
                           else
                            {
                              $('#txtOrderNo').attr("disabled","disabled");
                              $("#btnSave").attr("disabled","disabled");
                            }
                           if (itemData2.Value==3||itemData2.Value==4) 
                             {
                              $("#btnSave").attr("disabled","disabled");
                              $('#Status').attr("disabled","disabled");
                              if(itemData2.Value==3)
                                {
                                $('#btnDetail').attr("disabled","disabled");
                                }
                             }
                         else{
                              $('#Status').attr("disabled",false);
                             }
                           
                            $('#OrderType').attr("disabled","disabled"); 
                            $('#DistributerCode').attr("disabled","disabled");                                                                               
                           // $('#Transportation').attr("disabled","disabled");
                           // $('#LoadingPort').attr("disabled","disabled");
                            $('#QuotationValidity').attr("readonly","readonly");
                            //$("#Region").attr("disabled","disabled");
                           // $('#UnloadingPort').attr("disabled","disabled");
                            $('#RequestedDeliveryTime').attr("readonly","readonly");
                           // $('#TaxRate').attr("disabled","disabled");
                            $('#BillingRateA').attr("disabled","disabled");
                            $('#BillingRateB').attr("disabled","disabled");
                            $('#BillingRateC').attr("disabled","disabled");
                            $('#BillingRateD').attr("disabled","disabled");
                            $('#BillingRateE').attr("disabled","disabled");
                            $('#BillingRateF').attr("disabled","disabled");
                            $('#ShipToAddress').attr("disabled","disabled");
                            $('#FixPrice').attr("disabled","disabled");
                            $('#txtAreaCode').attr("disabled","disabled");
                            //$('#Comments').attr("readonly","readonly");
                           // $('#Memo').attr("readonly","readonly");
                        

                        }
                         if (itemData2.Value==1) 
                         {                                                                          
                           // $('#OrderType').attr("disabled","disabled"); 
                            $('#DistributerCode').attr("disabled","disabled");                          
                            $('#Status').attr("disabled",false); 
                            $('#BillingRateA').attr("disabled","disabled"); 
                            $('#BillingRateB').attr("disabled","disabled"); 
                            $('#BillingRateC').attr("disabled","disabled"); 
                            $('#BillingRateD').attr("disabled","disabled"); 
                            $('#BillingRateE').attr("disabled","disabled"); 
                            $('#BillingRateF').attr("disabled","disabled"); 
                            $('#ShipToAddress').attr("disabled","disabled");                         
                           // $('#FixPrice').attr("disabled","disabled");
                         }

                         $('#Status').val(itemData2.Value)
                        
                     }); //status each function end

                                                                                      

            }
 },
 error: function (xhr, ajaxOptions, thrownError) {
                          //txtError=" Failed to retrieve data";
                          txtError=" @Resources.Resource.MsgInfo3";
                           txtErrorType="0";
                           DisplayModal(txtErrorType,txtError) ;    
             
                    }


 });

 });




</script>
@*/*********************************/*@

 <script type="text/javascript">
    $(document).ready(function () {    
   $("#ShipToAddress").attr("disabled","disabled");
    $("#OrderRecieveDate").attr("disabled","disabled");
    $("#txtOtherCharges").attr("disabled","disabled");
    $("#txtCountryCode").attr("disabled","disabled");
    $("#txtCSWareHouse").attr("disabled", "disabled");
     $("#TaxRate").val("0");  
     $("#ExchangeRate").attr("disabled", "disabled");
     $("#PersonIncharge").attr("disabled","disabled");
     //$("#txtAreaCode").attr("disabled","disabled"); 
     $("#DistributerName").attr("disabled","disabled");   
   
        var strRole=@strCheckRole;
        if (strRole==1)
           {
          }
       else 
        {
            $("#Currency").attr("disabled","disabled");
            $("#txtCSWareHouse").attr("disabled","disabled");
            $("#txtCountryCode").attr("disabled","disabled");
            $("#txtAreaCode").attr("disabled","disabled");
            $("#Currency").attr("disabled","disabled");
            $("#Usance").attr("disabled","disabled");
            $("#PaymentTerms").attr("disabled","disabled");
            $("#DeliveryTerms").attr("disabled","disabled");
            $("#DistributerName").attr("disabled","disabled");
            $("#DistributerCode").attr("disabled",false);               
            $("#SalesPriceList").attr("disabled","disabled");
            $("#ExchangeRate").attr("disabled","disabled");           
            $("#QuotationValidity").attr("readonly","readonly");

         }
  

    $("#btnNew").click(function () {

       window.location.href="@Url.Action("CSConditionsView", "CSCondition", null)";

    });
 

 

          

   });//doc.reday end


</script>

@*Distributor code Change*@

  <script type="text/javascript">

  
    $("#btnDetail").on("click",function () {
     
          var count=0;
              $("#spnQuotationNo").html("")
              if ($('#txtOrderNo').val().trim()=="") {
                          $("#spnQuotationNo").html("*").attr("style","color:red");
                          return false;
                         }
          $(".NumericOnly").each(function ()
           {
                      if (isNaN($(this).val())) 
                        {
                             if ($(this).next().attr("id")=="QuotationSeqNo") 
                               {
                              $(this).next().next("span").html("*").attr("style","color:red");
                                }
                            else
                             {
                              $(this).next("span").html("*").attr("style","color:red");
                             
                        }
                         
                       count++;                    
         }
  });
   
if (count>0) {
             return false;
              }
              var ulrToNavigate="@Url.Action("Index", "CSDetails", null)" +"?ConONo="+$('#txtOrderNo').val().trim();
              window.location.href=ulrToNavigate;

    });//btndetail end

    /*********************btnDetail click end****************************/

  $("#DistributerCode").change(function () {
    $("#divLoading").remove();
   $("#divToUpdate").prepend("<div id='divLoading'></div>");
    var dID= $(this).val();                       
  $.getJSON("@Url.Action("DistributerChange", "CSCondition", null)", { strDistributerCode: dID }, 
                    function (data) {   
                      if (CheckForSessionExpiry(data)) 
                            {
                                SessionExpiredRedirect();
                                return;
                             }
                                  
                              $("#PriceSettingCodes").val(data.PricesetUpcode); 
                              $("#Currency").val(data.Currency); 
                               $("#SalesPriceList").val(data.SalePriceList); 
                               $("#Region").val(data.RegionCode);
                               $("#txtCountryCode").val(data.RegionCode); 
                               $("#txtAreaCode").val(data.RegionCode);  
                               $("#ddlBODS").val(data.BODS); 
                               $("#DistributerName").val(data.DBName); 
                               $("#txtCSWareHouse").val(data.WareHouse);  
                               $("#LoadingPort").val(data.LoadingPort); 
                               $("#UnloadingPort").val(data.UnloadingPort);                              
                               $("#ShipToAddress").val(data.Address);                               
                               $("#SubstitutionCodes").val(data.IPYN); 

                      
                    }); // json end




         }); //DistributerCode end
</script>

@*/***********************************************/*@

@*OredrType Change get values from ordertype dropdown and distributor code and send as parameted*@
  <script type="text/javascript">

   $("#OrderType").change(function () {
            var strOTYP = $(this).val();   
             $("#divLoading").remove();
            $("#divToUpdate").prepend("<div id='divLoading'></div>");         
             var strCustomerId=$("#DistributerCode").val();
             $.getJSON("@Url.Action("OrderTypes_OnChange", "QuotationCondition", null)", {  strOTYP: strOTYP,CustomerId:strCustomerId }, 
                    function (data) { 
                    
                            if (CheckForSessionExpiry(data)) 
                            {
                                SessionExpiredRedirect();
                                return;
                             }
                                $("#Usance").val(data.Usance);  
                                $("#Transportation").val(data.Transportation); 
                                $("#DeliveryTerms").val(data.DeliveryTerms); 
                                $("#PaymentTerms").val(data.PaymentTerms); 
                                $("#BillingRateA").val(data.BillingRateA);  
                                $("#BillingRateB").val(data.BillingRateB); 
                                $("#BillingRateC").val(data.BillingRateC); 
                                $("#BillingRateD").val(data.BillingRateD);  
                                $("#BillingRateE").val(data.BillingRateE); 
                                $("#BillingRateF").val(data.BillingRateF); 

                    }); 

         }); 
          





  
</script>

@*/***********************************************/*@

@*btn save code*@
   <script type="text/javascript">
    $(document).ready(function () { 

   $("#btnSave").click(function () {
  
        var count=0;
        var modelInfo=0;
        var invalidValue=0;
        $("#txtOrderNo").attr("style","");
     //if( !($("#Status").val()==3))
      // {
        $("select option:selected").each(function () {
                  
                   if($(this).val()=="")
                   { 
                
                 /* $(this).parent().next("span").html("*").attr("style","color:red");*/
                  $(this).parent().attr("style","border-color:#ff8080 !important;box-shadow: 0px 0px 5px 0px #ff8080;");
                  count++;
                   }
                   else 
                   {
                    $(this).parent().attr("style","");
                    /*$(this).parent().next("span").text("");*/
                   }
    
                });

           if ($("#txtCSWareHouse").val().trim()=="") 
             {
            /* $("#spntxtCSWareHouse").html("*").attr("style","color:red");*/
             $("#txtCSWareHouse").attr("style","border-color:#ff8080 !important;box-shadow: 0px 0px 5px 0px #ff8080;");
              
              count++;
             }
             else 
             {
             /* $("#spntxtCSWareHouse").empty();*/
              $("#txtCSWareHouse").attr("style","");
              }
              
           
              
             if (count>0)
                 {
                 return false;
                 }
                

                 if (invalidValue>0) 
                    {

                        return false;
                    }

//}
   $("#divLoading").remove();
   $("#divToUpdate").prepend("<div id='divLoading'></div>");
       var postData = 
            {                      
            
            OrderNo: $("#txtOrderNo").val(),
            OtherCharges: $("#txtOtherCharges").val(),
            BODS: $("#ddlBODS").val(),
            DistributerCodes: $("#DistributerCode").val(),
            SalesPriceList: $("#SalesPriceList").val(),
            Currency: $("#Currency").val(),
            DistributerName: $("#DistributerName").val(),            
            ExchangeRate: $("#ExchangeRate").val(),
            OrderType: $("#OrderType").val(),
            Usance: $("#Usance").val(),
            TaxRate: $("#TaxRate").val(),
            Transportation: $("#Transportation").val(),
            DeliveryTerms: $("#DeliveryTerms").val(),
            PaymentTerms: $("#PaymentTerms").val(),
            PersonIncharge: $("#PersonIncharge").val(),
            Region: $("#Region").val(),
            Status: $("#Status").val(),            
            LoadingPort: $("#LoadingPort").val(),
            UnloadingPort: $("#UnloadingPort").val(),
            RequestedDeliveryTime: $("#RequestedDeliveryTime").val(),  
            OrderRecieveDate: $("#OrderRecieveDate").val(),                              
            CSWareHouse: $("#txtCSWareHouse").val(),
            CountryCode: $("#txtCountryCode").val(),
            AreaCode: $("#txtAreaCode").val(),
             Manufacturer: $("#Manufacturer").val(),
            SubstitutionCodes: $("#SubstitutionCodes").val(),
            PriceSettingCodes: $("#PriceSettingCodes").val(),              
            BillingRateA: $("#BillingRateA").val(),
            BillingRateB: $("#BillingRateB").val(),
            BillingRateC: $("#BillingRateC").val(),
            BillingRateD: $("#BillingRateD").val(),
            BillingRateE: $("#BillingRateE").val(),
            BillingRateF: $("#BillingRateF").val(),
            ShipToAddress: $("#ShipToAddress").val(),           
            Memo: $("#Memo").val()!=""?$("#Memo").val():"",
            Comments: $("#Comments").val()!=null?$("#Comments").val():"",
            isDetailsExist: $("#isDetailsExist").val(),                     
            FixPrice:$('#FixPrice').is(":checked")?$('#FixPrice').is(":checked"):false 

            };
             
             $.ajax({
             type: "POST",
             data: postData,
             url:"@Url.Action("Save", "CSCondition", null, Request.Url.Scheme)",
             success: function (responseFromServer) 
             {
                if (CheckForSessionExpiry(responseFromServer)) 
                {
                   SessionExpiredRedirect();
                     return;
                 }
                    
                         if (isRealValue(responseFromServer))                                   
                             {
                                      
                                        if (responseFromServer.RecordUpdated==1)
                                         {
                                         // $("#spnMsg").html("<lable style='color:red;'> Data Updated successfully</label>");
                                            $("#OrderType").attr("disabled",true);
                                            CheckForStatus=1;
                                            $("#btnSearch").trigger("click");  
                                            $("#divModalBody").html("");
                                            txtError="Record Updated Successfully";
                                             $("#RequestedDeliveryTime").val(responseFromServer.ETDD);
                                           txtErrorType="1";
                                           DisplayModal(txtErrorType,txtError) ;  
                                            
                                         }
                                        
                                      else if (responseFromServer.RecordInserted==1) 
                                            {    
                                                   $("#txtOrderNo").val(responseFromServer.OrderNo);
                                                   $("#txtOrderNo").attr("disabled","disabled");                                                      
                                                   $("#OrderType").attr("disabled",true);
                                                   $("#btnDetail").attr("disabled",false);
                                                    $("#RequestedDeliveryTime").val(responseFromServer.ETDD);
                                                   CheckForStatus=1;        
                                           //txtError="Record Inserted Successfully";
                                           txtError="@Resources.Resource.MsgInfo63";
                                           txtErrorType="1";
                                           DisplayModal(txtErrorType,txtError) ;                                                                                                                                                       
                                                   
                                                        
                                            }
                                        else if(responseFromServer.ErrorOccured==1)
                                            {
                                            // txtError="An Error Occured..";
                                             txtError="@Resources.Resource.MsgInfo3";
                                             txtErrorType="0";
                                             DisplayModal(txtErrorType,txtError) ;         
                                             
                                                  
                                            }

                                    }//response from server

             }  //success

         }); //ajax

        });// btnsave

    });//doc.ready


</script>
@*/************************************************/*@

  <script type="text/javascript">
    $(document).ready(function () {
        var OrderNo = GetParameterValues('OrderNo');
        
        if (OrderNo != null && OrderNo != "") {
            $("#txtOrderNo").val(OrderNo);
        }
       
        if (OrderNo != null && OrderNo != "") {

            $("#btnSearch").trigger("click");
        }

        function GetParameterValues(param) {
            var url = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < url.length; i++) {
                var urlparam = url[i].split('=');
                if (urlparam[0] == param) {
                    return urlparam[1];
                }
            }
        }
    });  
</script>  

  <script type="text/javascript">
     if (typeof String.prototype.trim !== 'function') {
         String.prototype.trim = function () {
             return this.replace(/^\s+|\s+$/g, '');
         }
     }

     $(document).ready(function () {
         $("#LoadingPort").val("JEA");
       
         $(".allownumericwithdecimal").val("");
         var strRoleCheck=@strCheckRole;
         if(strRoleCheck=="1")
         {
         $(".allownumericwithdecimal").attr("disabled",false);
         
         }
         else{
             $(".allownumericwithdecimal").attr("disabled","disabled");
           }

           // assuming the controls you want to attach the plugin to 
    // have the "datepicker" class set
    

     }); //doc.ready

 </script>
 
  <script type="text/javascript">
    $(document).ready(function () {


        $(document).ajaxStart(function () {

            $("div#divLoading").addClass('show');
        });
        $(document).ajaxStop(function () {
            $("div#divLoading").removeClass('show');
        });


    }); //doc.ready end

</script>

  
<script type="text/javascript">
    $(document).ready(function () {
        $("#txtOrderNo").keypress(function (event) {
            var key = event.which;
       
            if (!(key >= 48 && key <= 57)) {
                if (key != 8) {
                    event.preventDefault();
                }
            }
        });

    });  //doc.ready end

</script>

<script type="text/javascript">
    $("#txtOrderNo").on("paste", function (event) { setTimeout(function () { if (!$.isNumeric($("#txtOrderNo").val().trim())) { $("#txtOrderNo").val(""); false; } }, 1); });

    $(document).ready(function () {
        $(".allownumericwithdecimal").keypress(function (event) {
            var key = event.which;

            if (!(key >= 48 && key <= 57)) {
                if (key != 8 && key != 46) {
                    event.preventDefault();
                }
            }
        });
        $(".allownumericwithdecimal").attr('maxlength', '3'); 

 
   $('#ShipToAddress').keypress(function (event) {
            var key = event.which;

            if (this.value.length >= 800 && key != 8 && key != 13) { 
                return false;
            }
        });

        $('#ShipToAddress').keyup(function () {
            if (this.value.length >= 800) {
                $(this).val($(this).val().substr(0, 800));
            }

        })

        $('#Comments').keypress(function (event) {
            var key = event.which;
            if (this.value.length >= 150 && key != 8 && key != 13) {
                return false;
            }
        })

        $('#Comments').keyup(function () {
            if (this.value.length >= 150) {
                $(this).val($(this).val().substr(0, 150));
                return false;
            }

        })
        $('#Memo').keypress(function (event) {
            var key = event.which;
            if (this.value.length >= 50 && key != 8 && key != 13) {
                return false;
            }
        })

        $('#Memo').keyup(function () {
            if (this.value.length >= 50) {
                $(this).val($(this).val().substr(0, 50));
                return false;
            }

        })

        $('#txtOrderNo').keypress(function (event) {
            var key = event.which;
            if (this.value.length >= 10 && key != 8 && key != 13) {
                return false;
            }
        })

        $('#txtOrderNo').keyup(function () {
            if (this.value.length >= 10) {
                $(this).val($(this).val().substr(0, 10));
                return false;
            }

        })

    });  //doc.ready end 

</script>
<script type="text/javascript">
    //$(document).ready(function () {

       // $('#PriceSettingCodes').val("1");
       // $('#SubstitutionCodes').val("2");
        
   // });  //doc.ready end

</script>

<script type="text/javascript">
    $(document).on('click', '#btnOk', function () {
        $("#MessageModal").modal('hide');

    }); 
</script>
<script type="text/javascript">
    $(document).ready(function () {

        if ($(window).width() <= 767) 
        { 
        
        }

    });  //doc.ready end
</script>
  <script type="text/javascript">
      var OtherCharges = "@Resources.Resource.lblOtherChargesInPercent";
    
      $(document).ready(function () {

          if ($(window).width() <= 767)
           {
               $("#lblCharges").text(OtherCharges.toString());
          }


             // if ($("#ddlSearchBy").val() == "1") {
                  // $("#lblOrderNo").text("Order No");
                 // $("#lblOrderNo").text(OrderNo.toString());
            //  }
             // else {
               //   $("#lblOrderNo").text(DBOrderNo.toString());
            //  }

      

      });        // doc.ready end
   </script>






  

  